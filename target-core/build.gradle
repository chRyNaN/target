import com.chrynan.target.buildSrc.LibraryConstants
import org.gradle.api.publish.maven.internal.artifact.FileBasedMavenArtifact

apply plugin: "kotlin-multiplatform"
apply plugin: "kotlinx-serialization"
apply plugin: "maven-publish"
apply plugin: "com.jfrog.bintray"

group LibraryConstants.group
version LibraryConstants.versionName

kotlin {
    targets {
        jvm()
        js()
        ios()
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
                api "org.jetbrains.kotlinx:kotlinx-serialization-core:1.0.0-RC"
            }
        }
    }
}

configurations {
    compileClasspath
}

bintray {
    user = project.findProperty("BINTRAY_USER") ?: System.getenv("BINTRAY_USER")
    key = project.findProperty("BINTRAY_KEY") ?: System.getenv("BINTRAY_KEY")

    pkg {
        repo = LibraryConstants.bintrayRepo
        name = LibraryConstants.repoName
        licenses = [LibraryConstants.license]
        vcsUrl = LibraryConstants.vcsUrl

        version {
            name = LibraryConstants.versionName
            desc = LibraryConstants.versionDescription
            released = new Date()
            vcsTag = LibraryConstants.versionName
        }
    }
}

bintrayUpload.doFirst {
    publications = publishing.publications.collect { publication ->
        File moduleFile = new File(project.buildDir, "publications/${publication.name}/module.json")

        if (moduleFile.exists()) {
            publication.artifact(new FileBasedMavenArtifact(moduleFile) {
                protected String getDefaultExtension() {
                    return "module"
                }
            })
        }

        publication.name
    }
}

bintrayUpload.dependsOn publishToMavenLocal

publishing {
    publications {
        kotlinMultiplatform {
            artifactId = "target-core"
        }
        jvm {
            artifactId = "target-core-jvm"
        }
        js {
            artifactId = "target-core-js"
        }
        iosArm64 {
            artifactId = "target-core-ios-arm64"
        }
        iosX64 {
            artifactId = "target-core-ios-x64"
        }
        metadata {
            artifactId = "target-core-metadata"
        }
    }
}
